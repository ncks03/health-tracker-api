name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            pip install pytest pytest-asyncio  # Ensure asyncio support

      # Run tests with more verbose output
      - name: Run tests
        env:
          # If you're using environment-specific configurations
          PYTHONPATH: .  # Ensures imports work correctly
          # You can add other environment variables here if needed
          TEST_DB_URL: "sqlite:///:memory:?check_same_thread=False"
        run: |
          pytest -v --capture=no  # Verbose mode, show print statements

      # Only proceed with deployment if tests pass
      - name: Log in to DigitalOcean
        if: success()  # Only run if previous steps (including tests) succeed
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DO_ACCESS_TOKEN }}
          DIGITALOCEAN_USERNAME: ${{ github.actor }}
        run: |
          echo "${DIGITALOCEAN_ACCESS_TOKEN}" | docker login registry.digitalocean.com -u "${DIGITALOCEAN_USERNAME}" --password-stdin

      - name: Build Docker image
        if: success()
        env:
          COMMIT_HASH: ${{ github.sha }}
        run: |
          docker build -t registry.digitalocean.com/devops-api/health-api:${COMMIT_HASH} -t registry.digitalocean.com/devops-api/health-api:latest .

      - name: Push Docker image to DigitalOcean
        if: success()
        env:
          COMMIT_HASH: ${{ github.sha }}
        run: |
          docker push --all-tags registry.digitalocean.com/devops-api/health-api

      - name: Set up kubectl
        if: success()
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Configure kubeconfig
        if: success()
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBECONFIG }}
        run: |
          mkdir -p $HOME/.kube
          echo "${KUBE_CONFIG_DATA}" > $HOME/.kube/config

      - name: Update Deployment with New Image
        if: success()
        env:
          COMMIT_HASH: ${{ github.sha }}
        run: |
          kubectl set image deployment/website website=registry.digitalocean.com/devops-api/health-api:${COMMIT_HASH} -n ns-website-db